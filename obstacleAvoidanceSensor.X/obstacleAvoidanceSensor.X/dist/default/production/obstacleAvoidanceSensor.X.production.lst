

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Aug 05 12:05:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0008                     _PORTDbits	set	8
   284  0008                     _PORTD	set	8
   285  0007                     _PORTCbits	set	7
   286  0088                     _TRISD	set	136
   287  008F                     _OSCCON	set	143
   288  043D                     _TRISC5	set	1085
   289  043C                     _TRISC4	set	1084
   290  0439                     _TRISC1	set	1081
   291                           
   292                           	psect	cinit
   293  07F8                     start_initialization:	
   294                           ; #config settings
   295                           
   296  07F8                     __initialization:
   297                           
   298                           ; Clear objects allocated to COMMON
   299  07F8  01F8               	clrf	__pbssCOMMON& (0+127)
   300  07F9  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   301  07FA  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   302  07FB  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   303  07FC                     end_of_initialization:	
   304                           ;End of C runtime variable initialization code
   305                           
   306  07FC                     __end_of__initialization:
   307  07FC  0183               	clrf	3
   308  07FD  120A  118A  2FA7   	ljmp	_main	;jump to C main() function
   309                           
   310                           	psect	bssCOMMON
   311  0078                     __pbssCOMMON:
   312  0078                     _temp:
   313  0078                     	ds	4
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:
   317  0070                     ?_LCD_Init:
   318  0070                     ?_LCD_Command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ??_LCD_Command:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     LCD_Command@cmd:
   331                           
   332                           ; 1 bytes @ 0x2
   333  0072                     	ds	1
   334  0073                     ??_LCD_Init:
   335                           
   336                           ; 1 bytes @ 0x3
   337  0073                     	ds	2
   338  0075                     ??_main:
   339                           
   340                           ; 1 bytes @ 0x5
   341  0075                     	ds	3
   342                           
   343                           	psect	maintext
   344  07A7                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 18 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          3       0       0       0       0
   367 ;;      Totals:         3       0       0       0       0
   368 ;;Total ram usage:        3 bytes
   369 ;; Hardware stack levels required when called: 2
   370 ;; This function calls:
   371 ;;		_LCD_Init
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377  07A7                     _main:	
   378                           ;psect for function _main
   379                           
   380  07A7                     l716:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   383                           
   384                           
   385                           ;main.c: 20:     OSCCON = 0x71;
   386  07A7  3071               	movlw	113
   387  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   388  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   389  07AA  008F               	movwf	15	;volatile
   390  07AB                     l718:
   391                           
   392                           ;main.c: 22:     LCD_Init();
   393  07AB  120A  118A  2747  120A  118A  	fcall	_LCD_Init
   394  07B0                     l720:
   395                           
   396                           ;main.c: 24:     TRISC1 = 1;
   397  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   398  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   399  07B2  1487               	bsf	7,1	;volatile
   400  07B3                     l722:
   401                           
   402                           ;main.c: 25:     TRISC4 = 0;
   403  07B3  1207               	bcf	7,4	;volatile
   404  07B4                     l724:
   405                           
   406                           ;main.c: 26:     TRISC5 = 0;
   407  07B4  1287               	bcf	7,5	;volatile
   408  07B5                     l726:
   409                           
   410                           ;main.c: 27:     PORTCbits.RC1 = 0;
   411  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   412  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   413  07B7  1087               	bcf	7,1	;volatile
   414  07B8                     l728:
   415                           
   416                           ;main.c: 28:     PORTCbits.RC4 = 0;
   417  07B8  1207               	bcf	7,4	;volatile
   418  07B9                     l730:
   419                           
   420                           ;main.c: 29:     PORTCbits.RC5 = 0;
   421  07B9  1287               	bcf	7,5	;volatile
   422  07BA                     l732:
   423                           
   424                           ;main.c: 30:     _delay((unsigned long)((300)*(8000000/4000.0)));
   425  07BA  3004               	movlw	4
   426  07BB  00F7               	movwf	??_main+2
   427  07BC  300C               	movlw	12
   428  07BD  00F6               	movwf	??_main+1
   429  07BE  3033               	movlw	51
   430  07BF  00F5               	movwf	??_main
   431  07C0                     u77:
   432  07C0  0BF5               	decfsz	??_main,f
   433  07C1  2FC0               	goto	u77
   434  07C2  0BF6               	decfsz	??_main+1,f
   435  07C3  2FC0               	goto	u77
   436  07C4  0BF7               	decfsz	??_main+2,f
   437  07C5  2FC0               	goto	u77
   438  07C6  2FC7               	nop2
   439  07C7                     l734:
   440                           
   441                           ;main.c: 50:     if( PORTCbits.RC1 == 1)
   442  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   443  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   444  07C9  1C87               	btfss	7,1	;volatile
   445  07CA  2FCC               	goto	u41
   446  07CB  2FCD               	goto	u40
   447  07CC                     u41:
   448  07CC  2FEF               	goto	l22
   449  07CD                     u40:
   450  07CD                     l736:
   451                           
   452                           ;main.c: 51:     {;main.c: 52:         PORTCbits.RC5=1;
   453  07CD  1687               	bsf	7,5	;volatile
   454  07CE                     l738:
   455                           
   456                           ;main.c: 53:         _delay((unsigned long)((300)*(8000000/4000.0)));
   457  07CE  3004               	movlw	4
   458  07CF  00F7               	movwf	??_main+2
   459  07D0  300C               	movlw	12
   460  07D1  00F6               	movwf	??_main+1
   461  07D2  3033               	movlw	51
   462  07D3  00F5               	movwf	??_main
   463  07D4                     u87:
   464  07D4  0BF5               	decfsz	??_main,f
   465  07D5  2FD4               	goto	u87
   466  07D6  0BF6               	decfsz	??_main+1,f
   467  07D7  2FD4               	goto	u87
   468  07D8  0BF7               	decfsz	??_main+2,f
   469  07D9  2FD4               	goto	u87
   470  07DA  2FDB               	nop2
   471  07DB                     l740:
   472                           
   473                           ;main.c: 54:         PORTCbits.RC4=1;
   474  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   475  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   476  07DD  1607               	bsf	7,4	;volatile
   477                           
   478                           ;main.c: 55:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   479  07DE  300B               	movlw	11
   480  07DF  00F7               	movwf	??_main+2
   481  07E0  3026               	movlw	38
   482  07E1  00F6               	movwf	??_main+1
   483  07E2  305D               	movlw	93
   484  07E3  00F5               	movwf	??_main
   485  07E4                     u97:
   486  07E4  0BF5               	decfsz	??_main,f
   487  07E5  2FE4               	goto	u97
   488  07E6  0BF6               	decfsz	??_main+1,f
   489  07E7  2FE4               	goto	u97
   490  07E8  0BF7               	decfsz	??_main+2,f
   491  07E9  2FE4               	goto	u97
   492  07EA  2FEB               	nop2
   493  07EB                     l742:
   494                           
   495                           ;main.c: 56:          PORTCbits.RC4=0;
   496  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   497  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   498  07ED  1207               	bcf	7,4	;volatile
   499                           
   500                           ;main.c: 57:     }
   501  07EE  2FC7               	goto	l734
   502  07EF                     l22:	
   503                           ;main.c: 58:     else if (PORTCbits.RC1 == 0){
   504                           
   505  07EF  1887               	btfsc	7,1	;volatile
   506  07F0  2FF2               	goto	u51
   507  07F1  2FF3               	goto	u50
   508  07F2                     u51:
   509  07F2  2FC7               	goto	l734
   510  07F3                     u50:
   511  07F3                     l744:
   512                           
   513                           ;main.c: 59:         PORTCbits.RC5=0;
   514  07F3  1287               	bcf	7,5	;volatile
   515  07F4  2FBA               	goto	l732
   516  07F5  120A  118A  2800   	ljmp	start
   517  07F8                     __end_of_main:
   518                           
   519                           	psect	text1
   520  0747                     __ptext1:	
   521 ;; *************** function _LCD_Init *****************
   522 ;; Defined at:
   523 ;;		line 35 in file "LCD.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          2       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_LCD_Command
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551  0747                     _LCD_Init:	
   552                           ;psect for function _LCD_Init
   553                           
   554  0747                     l694:	
   555                           ;incstack = 0
   556                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   557                           
   558                           
   559                           ;LCD.c: 37:     TRISD = 0;
   560  0747  1683               	bsf	3,5	;RP0=1, select bank1
   561  0748  1303               	bcf	3,6	;RP1=0, select bank1
   562  0749  0188               	clrf	8	;volatile
   563  074A                     l696:
   564                           
   565                           ;LCD.c: 38:     _delay((unsigned long)((15)*(8000000/4000.0)));
   566  074A  3027               	movlw	39
   567  074B  00F4               	movwf	??_LCD_Init+1
   568  074C  30F5               	movlw	245
   569  074D  00F3               	movwf	??_LCD_Init
   570  074E                     u107:
   571  074E  0BF3               	decfsz	??_LCD_Init,f
   572  074F  2F4E               	goto	u107
   573  0750  0BF4               	decfsz	??_LCD_Init+1,f
   574  0751  2F4E               	goto	u107
   575  0752                     l698:
   576                           
   577                           ;LCD.c: 39:     LCD_Command(0x02);
   578  0752  3002               	movlw	2
   579  0753  120A  118A  2771  120A  118A  	fcall	_LCD_Command
   580  0758                     l700:
   581                           
   582                           ;LCD.c: 40:     LCD_Command(0x28);
   583  0758  3028               	movlw	40
   584  0759  120A  118A  2771  120A  118A  	fcall	_LCD_Command
   585  075E                     l702:
   586                           
   587                           ;LCD.c: 41:     LCD_Command(0x01);
   588  075E  3001               	movlw	1
   589  075F  120A  118A  2771  120A  118A  	fcall	_LCD_Command
   590  0764                     l704:
   591                           
   592                           ;LCD.c: 42:     LCD_Command(0x0c);
   593  0764  300C               	movlw	12
   594  0765  120A  118A  2771  120A  118A  	fcall	_LCD_Command
   595  076A                     l706:
   596                           
   597                           ;LCD.c: 43:     LCD_Command(0x06);
   598  076A  3006               	movlw	6
   599  076B  120A  118A  2771  120A  118A  	fcall	_LCD_Command
   600  0770                     l42:
   601  0770  0008               	return
   602  0771                     __end_of_LCD_Init:
   603                           
   604                           	psect	text2
   605  0771                     __ptext2:	
   606 ;; *************** function _LCD_Command *****************
   607 ;; Defined at:
   608 ;;		line 59 in file "LCD.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  cmd             1    wreg     unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  cmd             1    2[COMMON] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_LCD_Init
   632 ;;		_LCD_String_xy
   633 ;;		_LCD_Clear
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637  0771                     _LCD_Command:	
   638                           ;psect for function _LCD_Command
   639                           
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   643                           ;LCD_Command@cmd stored from wreg
   644  0771  00F2               	movwf	LCD_Command@cmd
   645  0772                     l654:
   646                           
   647                           ;LCD.c: 59: void LCD_Command(unsigned char cmd );LCD.c: 60: {;LCD.c: 61:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
   648  0772  30F0               	movlw	240
   649  0773  0572               	andwf	LCD_Command@cmd,w
   650  0774  00F0               	movwf	??_LCD_Command
   651  0775  1283               	bcf	3,5	;RP0=0, select bank0
   652  0776  1303               	bcf	3,6	;RP1=0, select bank0
   653  0777  0808               	movf	8,w	;volatile
   654  0778  390F               	andlw	15
   655  0779  0470               	iorwf	??_LCD_Command,w
   656  077A  0088               	movwf	8	;volatile
   657  077B                     l656:
   658                           
   659                           ;LCD.c: 62:  PORTDbits.RD0 = 0;
   660  077B  1008               	bcf	8,0	;volatile
   661  077C                     l658:
   662                           
   663                           ;LCD.c: 63:  PORTDbits.RD1 = 1;
   664  077C  1488               	bsf	8,1	;volatile
   665  077D                     l660:
   666                           
   667                           ;LCD.c: 64:  __nop();
   668  077D  0000               	nop
   669  077E                     l662:
   670                           
   671                           ;LCD.c: 65:  PORTDbits.RD1 = 0;
   672  077E  1283               	bcf	3,5	;RP0=0, select bank0
   673  077F  1303               	bcf	3,6	;RP1=0, select bank0
   674  0780  1088               	bcf	8,1	;volatile
   675  0781                     l664:
   676                           
   677                           ;LCD.c: 66:  _delay((unsigned long)((1)*(8000000/4000.0)));
   678  0781  3003               	movlw	3
   679  0782  00F1               	movwf	??_LCD_Command+1
   680  0783  3097               	movlw	151
   681  0784  00F0               	movwf	??_LCD_Command
   682  0785                     u117:
   683  0785  0BF0               	decfsz	??_LCD_Command,f
   684  0786  2F85               	goto	u117
   685  0787  0BF1               	decfsz	??_LCD_Command+1,f
   686  0788  2F85               	goto	u117
   687  0789  2F8A               	nop2
   688  078A                     l666:
   689                           
   690                           ;LCD.c: 67:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
   691  078A  0872               	movf	LCD_Command@cmd,w
   692  078B  00F0               	movwf	??_LCD_Command
   693  078C  3004               	movlw	4
   694  078D                     u15:
   695  078D  1003               	clrc
   696  078E  0DF0               	rlf	??_LCD_Command,f
   697  078F  3EFF               	addlw	-1
   698  0790  1D03               	skipz
   699  0791  2F8D               	goto	u15
   700  0792  1283               	bcf	3,5	;RP0=0, select bank0
   701  0793  1303               	bcf	3,6	;RP1=0, select bank0
   702  0794  0808               	movf	8,w	;volatile
   703  0795  390F               	andlw	15
   704  0796  0470               	iorwf	??_LCD_Command,w
   705  0797  0088               	movwf	8	;volatile
   706  0798                     l668:
   707                           
   708                           ;LCD.c: 68:  PORTDbits.RD1 = 1;
   709  0798  1488               	bsf	8,1	;volatile
   710  0799                     l670:
   711                           
   712                           ;LCD.c: 69:  __nop();
   713  0799  0000               	nop
   714  079A                     l672:
   715                           
   716                           ;LCD.c: 70:  PORTDbits.RD1 = 0;
   717  079A  1283               	bcf	3,5	;RP0=0, select bank0
   718  079B  1303               	bcf	3,6	;RP1=0, select bank0
   719  079C  1088               	bcf	8,1	;volatile
   720                           
   721                           ;LCD.c: 71:  _delay((unsigned long)((3)*(8000000/4000.0)));
   722  079D  3008               	movlw	8
   723  079E  00F1               	movwf	??_LCD_Command+1
   724  079F  30C9               	movlw	201
   725  07A0  00F0               	movwf	??_LCD_Command
   726  07A1                     u127:
   727  07A1  0BF0               	decfsz	??_LCD_Command,f
   728  07A2  2FA1               	goto	u127
   729  07A3  0BF1               	decfsz	??_LCD_Command+1,f
   730  07A4  2FA1               	goto	u127
   731  07A5  2FA6               	nop2
   732  07A6                     l45:
   733  07A6  0008               	return
   734  07A7                     __end_of_LCD_Command:
   735  007E                     btemp	set	126	;btemp
   736  007E                     wtemp0	set	126
   737                           
   738                           	psect	idloc
   739                           
   740                           ;Config register IDLOC0 @ 0x2000
   741                           ;	unspecified, using default values
   742  2000                     	org	8192
   743  2000  3FFF               	dw	16383
   744                           
   745                           ;Config register IDLOC1 @ 0x2001
   746                           ;	unspecified, using default values
   747  2001                     	org	8193
   748  2001  3FFF               	dw	16383
   749                           
   750                           ;Config register IDLOC2 @ 0x2002
   751                           ;	unspecified, using default values
   752  2002                     	org	8194
   753  2002  3FFF               	dw	16383
   754                           
   755                           ;Config register IDLOC3 @ 0x2003
   756                           ;	unspecified, using default values
   757  2003                     	org	8195
   758  2003  3FFF               	dw	16383
   759                           
   760                           	psect	config
   761                           
   762                           ;Config register CONFIG1 @ 0x2007
   763                           ;	Oscillator Selection bits
   764                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
   765                           ;	Watchdog Timer Enable bit
   766                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   767                           ;	Power-up Timer Enable bit
   768                           ;	PWRTE = OFF, PWRT disabled
   769                           ;	RE3/MCLR pin function select bit
   770                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   771                           ;	Code Protection bit
   772                           ;	CP = OFF, Program memory code protection is disabled
   773                           ;	Data Code Protection bit
   774                           ;	CPD = OFF, Data memory code protection is disabled
   775                           ;	Brown Out Reset Selection bits
   776                           ;	BOREN = OFF, BOR disabled
   777                           ;	Internal External Switchover bit
   778                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   779                           ;	Fail-Safe Clock Monitor Enabled bit
   780                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   781                           ;	Low Voltage Programming Enable bit
   782                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   783                           ;	In-Circuit Debugger Mode bit
   784                           ;	DEBUG = 0x1, unprogrammed default
   785  2007                     	org	8199
   786  2007  20D5               	dw	8405
   787                           
   788                           ;Config register CONFIG2 @ 0x2008
   789                           ;	Brown-out Reset Selection bit
   790                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   791                           ;	Flash Program Memory Self Write Enable bits
   792                           ;	WRT = OFF, Write protection off
   793  2008                     	org	8200
   794  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              5 COMMON     3     3      0
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Aug 05 12:05:46 2022

           ?_LCD_Command 0070                       l22 07EF                       l42 0770  
                     l45 07A6                       u15 078D                       u40 07CD  
                     u41 07CC                       u50 07F3                       u51 07F2  
                     u77 07C0                       u87 07D4                       u97 07E4  
                    l700 0758                      l702 075E                      l704 0764  
                    l720 07B0                      l706 076A                      l730 07B9  
                    l722 07B3                      l660 077D                      l740 07DB  
                    l732 07BA                      l724 07B4                      l716 07A7  
                    l670 0799                      l662 077E                      l654 0772  
                    l742 07EB                      l734 07C7                      l726 07B5  
                    l718 07AB                      l672 079A                      l664 0781  
                    l656 077B                      l744 07F3                      l736 07CD  
                    l728 07B8                      l666 078A                      l658 077C  
                    l738 07CE                      l668 0798                      l694 0747  
                    l696 074A                      l698 0752                      u107 074E  
                    u117 0785                      u127 07A1                     _main 07A7  
                   _temp 0078                     btemp 007E                     start 0000  
       __end_of_LCD_Init 0771                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07F8                   ??_main 0075  
                 _OSCCON 008F                   _TRISC1 0439                   _TRISC4 043C  
                 _TRISC5 043D  __end_of__initialization 07FC                ?_LCD_Init 0070  
         __pcstackCOMMON 0070               ??_LCD_Init 0073               __pmaintext 07A7  
                __ptext1 0747                  __ptext2 0771     end_of_initialization 07FC  
         LCD_Command@cmd 0072                _PORTCbits 0007                _PORTDbits 0008  
          ??_LCD_Command 0070      start_initialization 07F8      __end_of_LCD_Command 07A7  
            __pbssCOMMON 0078                ___latbits 0002                 _LCD_Init 0747  
            _LCD_Command 0771  
