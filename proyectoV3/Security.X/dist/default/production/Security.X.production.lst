

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Aug 04 15:35:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  049A                     __pidataBANK0:
   376                           
   377                           ;initializer for keypad_getkey@F1296
   378  049A  3431               	retlw	49
   379  049B  3432               	retlw	50
   380  049C  3433               	retlw	51
   381  049D  3441               	retlw	65
   382  049E  3434               	retlw	52
   383  049F  3435               	retlw	53
   384  04A0  3436               	retlw	54
   385  04A1  3442               	retlw	66
   386  04A2  3437               	retlw	55
   387  04A3  3438               	retlw	56
   388  04A4  3439               	retlw	57
   389  04A5  3443               	retlw	67
   390  04A6  342A               	retlw	42
   391  04A7  3430               	retlw	48
   392  04A8  3423               	retlw	35
   393  04A9  3444               	retlw	68
   394                           
   395                           	psect	strings
   396  0003                     __pstrings:
   397  0003                     stringtab:
   398  0003                     __stringtab:
   399  0003                     stringcode:	
   400                           ;	String table - string pointers are 1 byte each
   401                           
   402  0003                     stringdir:
   403  0003  3000               	movlw	high stringdir
   404  0004  008A               	movwf	10
   405  0005  0804               	movf	4,w
   406  0006  0A84               	incf	4,f
   407  0007  0782               	addwf	2,f
   408  0008                     __stringbase:
   409  0008  3400               	retlw	0
   410  0009                     __end_of__stringtab:
   411  0009                     _password:
   412  0009  3432               	retlw	50
   413  000A  3430               	retlw	48
   414  000B  3432               	retlw	50
   415  000C  3431               	retlw	49
   416  000D  3400               	retlw	0
   417  000E                     __end_of_password:
   418  0007                     _PORTC	set	7
   419  0005                     _PORTA	set	5
   420  0008                     _PORTDbits	set	8
   421  0008                     _PORTD	set	8
   422  0006                     _PORTB	set	6
   423  0085                     _TRISA	set	133
   424  0087                     _TRISC	set	135
   425  008F                     _OSCCON	set	143
   426  0088                     _TRISD	set	136
   427  0081                     _OPTION_REGbits	set	129
   428  0086                     _TRISB	set	134
   429  0189                     _ANSELH	set	393
   430  000E                     STR_4:
   431  000E  3449               	retlw	73	;'I'
   432  000F  346E               	retlw	110	;'n'
   433  0010  3467               	retlw	103	;'g'
   434  0011  3472               	retlw	114	;'r'
   435  0012  3465               	retlw	101	;'e'
   436  0013  3473               	retlw	115	;'s'
   437  0014  346F               	retlw	111	;'o'
   438  0015  3420               	retlw	32	;' '
   439  0016  344E               	retlw	78	;'N'
   440  0017  346F               	retlw	111	;'o'
   441  0018  3420               	retlw	32	;' '
   442  0019  3450               	retlw	80	;'P'
   443  001A  3465               	retlw	101	;'e'
   444  001B  3472               	retlw	114	;'r'
   445  001C  346D               	retlw	109	;'m'
   446  001D  3469               	retlw	105	;'i'
   447  001E  3474               	retlw	116	;'t'
   448  001F  3469               	retlw	105	;'i'
   449  0020  3464               	retlw	100	;'d'
   450  0021  346F               	retlw	111	;'o'
   451  0022  3400               	retlw	0
   452  0023                     STR_3:
   453  0023  3443               	retlw	67	;'C'
   454  0024  346C               	retlw	108	;'l'
   455  0025  3461               	retlw	97	;'a'
   456  0026  3476               	retlw	118	;'v'
   457  0027  3465               	retlw	101	;'e'
   458  0028  3420               	retlw	32	;' '
   459  0029  3449               	retlw	73	;'I'
   460  002A  346E               	retlw	110	;'n'
   461  002B  3463               	retlw	99	;'c'
   462  002C  346F               	retlw	111	;'o'
   463  002D  3472               	retlw	114	;'r'
   464  002E  3472               	retlw	114	;'r'
   465  002F  3465               	retlw	101	;'e'
   466  0030  3463               	retlw	99	;'c'
   467  0031  3474               	retlw	116	;'t'
   468  0032  3461               	retlw	97	;'a'
   469  0033  3400               	retlw	0
   470  0034                     STR_2:
   471  0034  3443               	retlw	67	;'C'
   472  0035  346C               	retlw	108	;'l'
   473  0036  3461               	retlw	97	;'a'
   474  0037  3476               	retlw	118	;'v'
   475  0038  3465               	retlw	101	;'e'
   476  0039  3420               	retlw	32	;' '
   477  003A  3443               	retlw	67	;'C'
   478  003B  346F               	retlw	111	;'o'
   479  003C  3472               	retlw	114	;'r'
   480  003D  3472               	retlw	114	;'r'
   481  003E  3465               	retlw	101	;'e'
   482  003F  3463               	retlw	99	;'c'
   483  0040  3474               	retlw	116	;'t'
   484  0041  3461               	retlw	97	;'a'
   485  0042  3400               	retlw	0
   486  0043                     STR_1:
   487  0043  3450               	retlw	80	;'P'
   488  0044  3472               	retlw	114	;'r'
   489  0045  3465               	retlw	101	;'e'
   490  0046  3473               	retlw	115	;'s'
   491  0047  3473               	retlw	115	;'s'
   492  0048  3420               	retlw	32	;' '
   493  0049  3461               	retlw	97	;'a'
   494  004A  3420               	retlw	32	;' '
   495  004B  344B               	retlw	75	;'K'
   496  004C  3465               	retlw	101	;'e'
   497  004D  3479               	retlw	121	;'y'
   498  004E  3400               	retlw	0
   499                           
   500                           	psect	cinit
   501  07E6                     start_initialization:	
   502                           ; #config settings
   503                           
   504  07E6                     __initialization:
   505                           
   506                           ; Initialize objects allocated to BANK0
   507  07E6  1383               	bcf	3,7	;select IRP bank0
   508  07E7  3046               	movlw	low (__pdataBANK0+16)
   509  07E8  00FD               	movwf	btemp+-1
   510  07E9  3004               	movlw	high __pidataBANK0
   511  07EA  00FE               	movwf	btemp
   512  07EB  309A               	movlw	low __pidataBANK0
   513  07EC  00FF               	movwf	btemp+1
   514  07ED  3036               	movlw	low __pdataBANK0
   515  07EE  0084               	movwf	4
   516  07EF  120A  118A  24AE  120A  118A  	fcall	init_ram0
   517                           
   518                           ; Clear objects allocated to BANK0
   519  07F4  01C6               	clrf	__pbssBANK0& (0+127)
   520  07F5  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   521  07F6  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   522  07F7  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   523  07F8  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   524  07F9  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   525  07FA  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   526  07FB  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   527  07FC                     end_of_initialization:	
   528                           ;End of C runtime variable initialization code
   529                           
   530  07FC                     __end_of__initialization:
   531  07FC  0183               	clrf	3
   532  07FD  120A  118A  2EE0   	ljmp	_main	;jump to C main() function
   533                           
   534                           	psect	bssBANK0
   535  0046                     __pbssBANK0:
   536  0046                     _counter_try:
   537  0046                     	ds	2
   538  0048                     _idx:
   539  0048                     	ds	1
   540  0049                     _pass_user:
   541  0049                     	ds	5
   542                           
   543                           	psect	dataBANK0
   544  0036                     __pdataBANK0:
   545  0036                     keypad_getkey@F1296:
   546  0036                     	ds	16
   547                           
   548                           	psect	inittext
   549  04AA                     init_fetch0:	
   550                           ;	Called with low address in FSR and high address in W
   551                           
   552  04AA  087E               	movf	btemp,w
   553  04AB  008A               	movwf	10
   554  04AC  087F               	movf	btemp+1,w
   555  04AD  0082               	movwf	2
   556  04AE                     init_ram0:	
   557                           ;Called with:
   558                           ;	high address of idata address in btemp 
   559                           ;	low address of idata address in btemp+1 
   560                           ;	low address of data in FSR
   561                           ;	high address + 1 of data in btemp-1
   562                           
   563  04AE  120A  118A  24AA  120A  118A  	fcall	init_fetch0
   564  04B3  0080               	movwf	0
   565  04B4  0A84               	incf	4,f
   566  04B5  0804               	movf	4,w
   567  04B6  067D               	xorwf	btemp+-1,w
   568  04B7  1903               	btfsc	3,2
   569  04B8  3400               	retlw	0
   570  04B9  0AFF               	incf	btemp+1,f
   571  04BA  1903               	btfsc	3,2
   572  04BB  0AFE               	incf	btemp,f
   573  04BC  2CAE               	goto	init_ram0
   574                           
   575                           	psect	cstackCOMMON
   576  0070                     __pcstackCOMMON:
   577  0070                     ?_LCD_Command:
   578  0070                     ??_LCD_Command:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_keypad_init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_keypad_init:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_keypad_getkey:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_keypad_getkey:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_LCD_Init:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_LCD_Char:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_LCD_Char:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_LCD_String:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_LCD_Clear:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_strncmp:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     strncmp@s2:	
   615                           ; 2 bytes @ 0x0
   616                           
   617                           
   618                           ; 1 bytes @ 0x0
   619  0070                     	ds	1
   620  0071                     strncmp@len:
   621                           
   622                           ; 2 bytes @ 0x1
   623  0071                     	ds	1
   624  0072                     LCD_Command@cmd:
   625  0072                     LCD_Char@dat:	
   626                           ; 1 bytes @ 0x2
   627                           
   628                           
   629                           ; 1 bytes @ 0x2
   630  0072                     	ds	1
   631  0073                     ??_strncmp:
   632  0073                     ??_LCD_Init:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  0073                     ??_LCD_String:	
   636                           ; 1 bytes @ 0x3
   637                           
   638  0073                     ??_LCD_Clear:	
   639                           ; 1 bytes @ 0x3
   640                           
   641                           
   642                           ; 1 bytes @ 0x3
   643  0073                     	ds	1
   644  0074                     LCD_String@msg:
   645                           
   646                           ; 1 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ?_LCD_String_xy:
   649  0075                     LCD_String_xy@pos:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     strncmp@s1:	
   653                           ; 1 bytes @ 0x5
   654                           
   655                           
   656                           ; 1 bytes @ 0x5
   657  0075                     	ds	1
   658  0076                     LCD_String_xy@msg:
   659                           
   660                           ; 1 bytes @ 0x6
   661  0076                     	ds	1
   662  0077                     ??_LCD_String_xy:
   663                           
   664                           ; 1 bytes @ 0x7
   665  0077                     	ds	1
   666  0078                     LCD_String_xy@row:
   667                           
   668                           ; 1 bytes @ 0x8
   669  0078                     	ds	1
   670  0079                     LCD_String_xy@location:
   671                           
   672                           ; 1 bytes @ 0x9
   673  0079                     	ds	1
   674  007A                     ??_main:
   675                           
   676                           ; 1 bytes @ 0xA
   677  007A                     	ds	3
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:
   681  0020                     keypad_getkey@letras:
   682                           
   683                           ; 16 bytes @ 0x0
   684  0020                     	ds	16
   685  0030                     keypad_getkey@valor:
   686                           
   687                           ; 1 bytes @ 0x10
   688  0030                     	ds	1
   689  0031                     keypad_getkey@i:
   690                           
   691                           ; 2 bytes @ 0x11
   692  0031                     	ds	2
   693  0033                     main@key:
   694                           
   695                           ; 1 bytes @ 0x13
   696  0033                     	ds	1
   697  0034                     main@i:
   698                           
   699                           ; 2 bytes @ 0x14
   700  0034                     	ds	2
   701                           
   702                           	psect	maintext
   703  06E0                     __pmaintext:	
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 33 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  i               2   20[BANK0 ] int 
   714 ;;  key             1   19[BANK0 ] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : B00/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0       3       0       0       0
   726 ;;      Temps:          3       0       0       0       0
   727 ;;      Totals:         3       3       0       0       0
   728 ;;Total ram usage:        6 bytes
   729 ;; Hardware stack levels required when called: 3
   730 ;; This function calls:
   731 ;;		_LCD_Char
   732 ;;		_LCD_Clear
   733 ;;		_LCD_Command
   734 ;;		_LCD_Init
   735 ;;		_LCD_String_xy
   736 ;;		_keypad_getkey
   737 ;;		_keypad_init
   738 ;;		_strncmp
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744  06E0                     _main:	
   745                           ;psect for function _main
   746                           
   747  06E0                     l1235:	
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   750                           
   751                           
   752                           ;main.c: 37:     OSCCON = 0x71;
   753  06E0  3071               	movlw	113
   754  06E1  1683               	bsf	3,5	;RP0=1, select bank1
   755  06E2  1303               	bcf	3,6	;RP1=0, select bank1
   756  06E3  008F               	movwf	15	;volatile
   757  06E4                     l1237:
   758                           
   759                           ;main.c: 38:     ANSELH = 0x00;
   760  06E4  1683               	bsf	3,5	;RP0=1, select bank3
   761  06E5  1703               	bsf	3,6	;RP1=1, select bank3
   762  06E6  0189               	clrf	9	;volatile
   763  06E7                     l1239:
   764                           
   765                           ;main.c: 39:     TRISC = 0x00;
   766  06E7  1683               	bsf	3,5	;RP0=1, select bank1
   767  06E8  1303               	bcf	3,6	;RP1=0, select bank1
   768  06E9  0187               	clrf	7	;volatile
   769  06EA                     l1241:
   770                           
   771                           ;main.c: 40:     TRISA = 0x00;
   772  06EA  0185               	clrf	5	;volatile
   773  06EB                     l1243:
   774                           
   775                           ;main.c: 41:     LCD_Init();
   776  06EB  120A  118A  2503  120A  118A  	fcall	_LCD_Init
   777  06F0                     l1245:
   778                           
   779                           ;main.c: 43:     keypad_init();
   780  06F0  120A  118A  247E  120A  118A  	fcall	_keypad_init
   781  06F5                     l1247:
   782                           
   783                           ;main.c: 46:         LCD_String_xy(0,0,"Press a Key");
   784  06F5  01F5               	clrf	LCD_String_xy@pos
   785  06F6  303B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   786  06F7  00FA               	movwf	??_main
   787  06F8  087A               	movf	??_main,w
   788  06F9  00F6               	movwf	LCD_String_xy@msg
   789  06FA  3000               	movlw	0
   790  06FB  120A  118A  24DC  120A  118A  	fcall	_LCD_String_xy
   791  0700                     l1249:
   792                           
   793                           ;main.c: 47:         LCD_Command(0xC0);
   794  0700  30C0               	movlw	192
   795  0701  120A  118A  252D  120A  118A  	fcall	_LCD_Command
   796  0706                     l1251:
   797                           
   798                           ;main.c: 49:             key = keypad_getkey();
   799  0706  120A  118A  25DF  120A  118A  	fcall	_keypad_getkey
   800  070B  00FA               	movwf	??_main
   801  070C  087A               	movf	??_main,w
   802  070D  1283               	bcf	3,5	;RP0=0, select bank0
   803  070E  1303               	bcf	3,6	;RP1=0, select bank0
   804  070F  00B3               	movwf	main@key
   805  0710                     l1253:
   806                           
   807                           ;main.c: 50:             if(key != 0){
   808  0710  0833               	movf	main@key,w
   809  0711  1903               	btfsc	3,2
   810  0712  2F14               	goto	u661
   811  0713  2F15               	goto	u660
   812  0714                     u661:
   813  0714  2F29               	goto	l1261
   814  0715                     u660:
   815  0715                     l1255:
   816                           
   817                           ;main.c: 52:                 LCD_Char(key);
   818  0715  0833               	movf	main@key,w
   819  0716  120A  118A  2563  120A  118A  	fcall	_LCD_Char
   820  071B                     l1257:
   821                           
   822                           ;main.c: 53:                 pass_user[idx++] = key;
   823  071B  1283               	bcf	3,5	;RP0=0, select bank0
   824  071C  1303               	bcf	3,6	;RP1=0, select bank0
   825  071D  0833               	movf	main@key,w
   826  071E  00FA               	movwf	??_main
   827  071F  0848               	movf	_idx,w
   828  0720  3E49               	addlw	(low (_pass_user| 0))& (0+255)
   829  0721  0084               	movwf	4
   830  0722  087A               	movf	??_main,w
   831  0723  1383               	bcf	3,7	;select IRP bank0
   832  0724  0080               	movwf	0
   833  0725                     l1259:
   834  0725  3001               	movlw	1
   835  0726  00FA               	movwf	??_main
   836  0727  087A               	movf	??_main,w
   837  0728  07C8               	addwf	_idx,f
   838  0729                     l1261:
   839                           
   840                           ;main.c: 55:             _delay((unsigned long)((100)*(8000000/4000.0)));
   841  0729  3002               	movlw	2
   842  072A  00FC               	movwf	??_main+2
   843  072B  3004               	movlw	4
   844  072C  00FB               	movwf	??_main+1
   845  072D  30BA               	movlw	186
   846  072E  00FA               	movwf	??_main
   847  072F                     u737:
   848  072F  0BFA               	decfsz	??_main,f
   849  0730  2F2F               	goto	u737
   850  0731  0BFB               	decfsz	??_main+1,f
   851  0732  2F2F               	goto	u737
   852  0733  0BFC               	decfsz	??_main+2,f
   853  0734  2F2F               	goto	u737
   854  0735  0000               	nop
   855  0736                     l1263:
   856                           
   857                           ;main.c: 56:         }while(idx < 5);
   858  0736  3005               	movlw	5
   859  0737  1283               	bcf	3,5	;RP0=0, select bank0
   860  0738  1303               	bcf	3,6	;RP1=0, select bank0
   861  0739  0248               	subwf	_idx,w
   862  073A  1C03               	skipc
   863  073B  2F3D               	goto	u671
   864  073C  2F3E               	goto	u670
   865  073D                     u671:
   866  073D  2F06               	goto	l1251
   867  073E                     u670:
   868  073E                     l1265:
   869                           
   870                           ;main.c: 58:         if(strncmp(pass_user,password,4)==0){
   871  073E  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
   872  073F  00FA               	movwf	??_main
   873  0740  087A               	movf	??_main,w
   874  0741  00F0               	movwf	strncmp@s2
   875  0742  3004               	movlw	4
   876  0743  00F1               	movwf	strncmp@len
   877  0744  3000               	movlw	0
   878  0745  00F2               	movwf	strncmp@len+1
   879  0746  3049               	movlw	(low (_pass_user| 0))& (0+255)
   880  0747  120A  118A  2599  120A  118A  	fcall	_strncmp
   881  074C  0870               	movf	?_strncmp,w
   882  074D  0471               	iorwf	?_strncmp+1,w
   883  074E  1D03               	btfss	3,2
   884  074F  2F51               	goto	u681
   885  0750  2F52               	goto	u680
   886  0751                     u681:
   887  0751  2F8B               	goto	l1285
   888  0752                     u680:
   889  0752                     l1267:
   890                           
   891                           ;main.c: 59:             LCD_Clear();
   892  0752  120A  118A  248A  120A  118A  	fcall	_LCD_Clear
   893  0757                     l1269:
   894                           
   895                           ;main.c: 60:             LCD_String_xy(0,0,"Clave Correcta");
   896  0757  01F5               	clrf	LCD_String_xy@pos
   897  0758  302C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   898  0759  00FA               	movwf	??_main
   899  075A  087A               	movf	??_main,w
   900  075B  00F6               	movwf	LCD_String_xy@msg
   901  075C  3000               	movlw	0
   902  075D  120A  118A  24DC  120A  118A  	fcall	_LCD_String_xy
   903  0762                     l1271:
   904                           
   905                           ;main.c: 61:             PORTA = 0x01;
   906  0762  3001               	movlw	1
   907  0763  1283               	bcf	3,5	;RP0=0, select bank0
   908  0764  1303               	bcf	3,6	;RP1=0, select bank0
   909  0765  0085               	movwf	5	;volatile
   910  0766                     l1273:
   911                           
   912                           ;main.c: 62:             for(int i = 0; i < 8; i++){
   913  0766  01B4               	clrf	main@i
   914  0767  01B5               	clrf	main@i+1
   915  0768                     l153:
   916                           
   917                           ;main.c: 64:                 if(i % 2 == 0){
   918  0768  1283               	bcf	3,5	;RP0=0, select bank0
   919  0769  1303               	bcf	3,6	;RP1=0, select bank0
   920  076A  1834               	btfsc	main@i,0
   921  076B  2F6D               	goto	u691
   922  076C  2F6E               	goto	u690
   923  076D                     u691:
   924  076D  2F71               	goto	l155
   925  076E                     u690:
   926  076E                     l1279:
   927                           
   928                           ;main.c: 65:                     PORTC = 0xAA;
   929  076E  30AA               	movlw	170
   930  076F  0087               	movwf	7	;volatile
   931                           
   932                           ;main.c: 66:                 }
   933  0770  2F77               	goto	l156
   934  0771                     l155:	
   935                           ;main.c: 67:                 else if(i % 2 != 0){
   936                           
   937  0771  1C34               	btfss	main@i,0
   938  0772  2F74               	goto	u701
   939  0773  2F75               	goto	u700
   940  0774                     u701:
   941  0774  2F77               	goto	l156
   942  0775                     u700:
   943  0775                     l1281:
   944                           
   945                           ;main.c: 68:                     PORTC = 0x55;
   946  0775  3055               	movlw	85
   947  0776  0087               	movwf	7	;volatile
   948  0777                     l156:
   949                           
   950                           ;main.c: 70:             }
   951  0777  3001               	movlw	1
   952  0778  07B4               	addwf	main@i,f
   953  0779  1803               	skipnc
   954  077A  0AB5               	incf	main@i+1,f
   955  077B  3000               	movlw	0
   956  077C  07B5               	addwf	main@i+1,f
   957  077D                     l1283:
   958  077D  0835               	movf	main@i+1,w
   959  077E  3A80               	xorlw	128
   960  077F  00FF               	movwf	btemp+1
   961  0780  3080               	movlw	128
   962  0781  027F               	subwf	btemp+1,w
   963  0782  1D03               	skipz
   964  0783  2F86               	goto	u715
   965  0784  3008               	movlw	8
   966  0785  0234               	subwf	main@i,w
   967  0786                     u715:
   968  0786  1C03               	skipc
   969  0787  2F89               	goto	u711
   970  0788  2F8A               	goto	u710
   971  0789                     u711:
   972  0789  2F68               	goto	l153
   973  078A                     u710:
   974  078A  2FA3               	goto	l1291
   975  078B                     l1285:
   976  078B  3001               	movlw	1
   977  078C  1283               	bcf	3,5	;RP0=0, select bank0
   978  078D  1303               	bcf	3,6	;RP1=0, select bank0
   979  078E  07C6               	addwf	_counter_try,f
   980  078F  1803               	skipnc
   981  0790  0AC7               	incf	_counter_try+1,f
   982  0791  3000               	movlw	0
   983  0792  07C7               	addwf	_counter_try+1,f
   984  0793                     l1287:
   985                           
   986                           ;main.c: 75:             LCD_Clear();
   987  0793  120A  118A  248A  120A  118A  	fcall	_LCD_Clear
   988  0798                     l1289:
   989                           
   990                           ;main.c: 76:             LCD_String_xy(0,0,"Clave Incorrecta");
   991  0798  01F5               	clrf	LCD_String_xy@pos
   992  0799  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   993  079A  00FA               	movwf	??_main
   994  079B  087A               	movf	??_main,w
   995  079C  00F6               	movwf	LCD_String_xy@msg
   996  079D  3000               	movlw	0
   997  079E  120A  118A  24DC  120A  118A  	fcall	_LCD_String_xy
   998  07A3                     l1291:
   999                           
  1000                           ;main.c: 78:         if (counter_try == 3){
  1001  07A3  3003               	movlw	3
  1002  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1003  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1004  07A6  0646               	xorwf	_counter_try,w
  1005  07A7  0447               	iorwf	_counter_try+1,w
  1006  07A8  1D03               	btfss	3,2
  1007  07A9  2FAB               	goto	u721
  1008  07AA  2FAC               	goto	u720
  1009  07AB                     u721:
  1010  07AB  2FCD               	goto	l1301
  1011  07AC                     u720:
  1012  07AC                     l1293:
  1013                           
  1014                           ;main.c: 79:             LCD_Clear();
  1015  07AC  120A  118A  248A  120A  118A  	fcall	_LCD_Clear
  1016  07B1                     l1295:
  1017                           
  1018                           ;main.c: 80:             LCD_String_xy(0,0,"Ingreso No Permitido");
  1019  07B1  01F5               	clrf	LCD_String_xy@pos
  1020  07B2  3006               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1021  07B3  00FA               	movwf	??_main
  1022  07B4  087A               	movf	??_main,w
  1023  07B5  00F6               	movwf	LCD_String_xy@msg
  1024  07B6  3000               	movlw	0
  1025  07B7  120A  118A  24DC  120A  118A  	fcall	_LCD_String_xy
  1026  07BC                     l1297:
  1027                           
  1028                           ;main.c: 81:             PORTA = 0x02;
  1029  07BC  3002               	movlw	2
  1030  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1031  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1032  07BF  0085               	movwf	5	;volatile
  1033  07C0                     l1299:
  1034                           
  1035                           ;main.c: 82:             _delay((unsigned long)((12000)*(8000000/4000.0)));
  1036  07C0  307A               	movlw	122
  1037  07C1  00FC               	movwf	??_main+2
  1038  07C2  30C1               	movlw	193
  1039  07C3  00FB               	movwf	??_main+1
  1040  07C4  3081               	movlw	129
  1041  07C5  00FA               	movwf	??_main
  1042  07C6                     u747:
  1043  07C6  0BFA               	decfsz	??_main,f
  1044  07C7  2FC6               	goto	u747
  1045  07C8  0BFB               	decfsz	??_main+1,f
  1046  07C9  2FC6               	goto	u747
  1047  07CA  0BFC               	decfsz	??_main+2,f
  1048  07CB  2FC6               	goto	u747
  1049  07CC  2FCD               	nop2
  1050  07CD                     l1301:
  1051                           
  1052                           ;main.c: 84:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1053  07CD  3015               	movlw	21
  1054  07CE  00FC               	movwf	??_main+2
  1055  07CF  304B               	movlw	75
  1056  07D0  00FB               	movwf	??_main+1
  1057  07D1  30BE               	movlw	190
  1058  07D2  00FA               	movwf	??_main
  1059  07D3                     u757:
  1060  07D3  0BFA               	decfsz	??_main,f
  1061  07D4  2FD3               	goto	u757
  1062  07D5  0BFB               	decfsz	??_main+1,f
  1063  07D6  2FD3               	goto	u757
  1064  07D7  0BFC               	decfsz	??_main+2,f
  1065  07D8  2FD3               	goto	u757
  1066  07D9  0000               	nop
  1067  07DA                     l1303:
  1068                           
  1069                           ;main.c: 85:         LCD_Clear();
  1070  07DA  120A  118A  248A  120A  118A  	fcall	_LCD_Clear
  1071  07DF                     l1305:
  1072                           
  1073                           ;main.c: 86:         idx = 0;
  1074  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1075  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1076  07E1  01C8               	clrf	_idx
  1077  07E2  2EF5               	goto	l1247
  1078  07E3  120A  118A  2800   	ljmp	start
  1079  07E6                     __end_of_main:
  1080                           
  1081                           	psect	text1
  1082  0599                     __ptext1:	
  1083 ;; *************** function _strncmp *****************
  1084 ;; Defined at:
  1085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strncmp.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  s1              1    wreg     PTR const unsigned char 
  1088 ;;		 -> pass_user(5), 
  1089 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1090 ;;		 -> password(5), 
  1091 ;;  len             2    1[COMMON] unsigned int 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1094 ;;		 -> pass_user(5), 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2    0[COMMON] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         3       0       0       0       0
  1105 ;;      Locals:         1       0       0       0       0
  1106 ;;      Temps:          2       0       0       0       0
  1107 ;;      Totals:         6       0       0       0       0
  1108 ;;Total ram usage:        6 bytes
  1109 ;; Hardware stack levels used: 2
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117  0599                     _strncmp:	
  1118                           ;psect for function _strncmp
  1119                           
  1120                           
  1121                           ;incstack = 0
  1122                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1123                           ;strncmp@s1 stored from wreg
  1124  0599  00F5               	movwf	strncmp@s1
  1125  059A                     l1219:
  1126  059A  2DCE               	goto	l699
  1127  059B                     l1221:
  1128  059B  0875               	movf	strncmp@s1,w
  1129  059C  0084               	movwf	4
  1130  059D  1383               	bcf	3,7	;select IRP bank0
  1131  059E  0800               	movf	0,w
  1132  059F  1903               	btfsc	3,2
  1133  05A0  2DA2               	goto	u631
  1134  05A1  2DA3               	goto	u630
  1135  05A2                     u631:
  1136  05A2  2DB3               	goto	l1225
  1137  05A3                     u630:
  1138  05A3                     l1223:
  1139  05A3  0870               	movf	strncmp@s2,w
  1140  05A4  0084               	movwf	4
  1141  05A5  120A  118A  2003  120A  118A  	fcall	stringdir
  1142  05AA  00F3               	movwf	??_strncmp
  1143  05AB  0875               	movf	strncmp@s1,w
  1144  05AC  0084               	movwf	4
  1145  05AD  0800               	movf	0,w
  1146  05AE  0673               	xorwf	??_strncmp,w
  1147  05AF  1903               	skipnz
  1148  05B0  2DB2               	goto	u641
  1149  05B1  2DB3               	goto	u640
  1150  05B2                     u641:
  1151  05B2  2DC6               	goto	l1229
  1152  05B3                     u640:
  1153  05B3                     l1225:
  1154  05B3  0870               	movf	strncmp@s2,w
  1155  05B4  0084               	movwf	4
  1156  05B5  120A  118A  2003  120A  118A  	fcall	stringdir
  1157  05BA  00F3               	movwf	??_strncmp
  1158  05BB  0875               	movf	strncmp@s1,w
  1159  05BC  0084               	movwf	4
  1160  05BD  0800               	movf	0,w
  1161  05BE  00F4               	movwf	??_strncmp+1
  1162  05BF  0873               	movf	??_strncmp,w
  1163  05C0  0274               	subwf	??_strncmp+1,w
  1164  05C1  00F0               	movwf	?_strncmp
  1165  05C2  01F1               	clrf	?_strncmp+1
  1166  05C3  1C03               	skipc
  1167  05C4  03F1               	decf	?_strncmp+1,f
  1168  05C5  2DDE               	goto	l704
  1169  05C6                     l1229:
  1170  05C6  3001               	movlw	1
  1171  05C7  00F3               	movwf	??_strncmp
  1172  05C8  0873               	movf	??_strncmp,w
  1173  05C9  07F5               	addwf	strncmp@s1,f
  1174  05CA  3001               	movlw	1
  1175  05CB  00F3               	movwf	??_strncmp
  1176  05CC  0873               	movf	??_strncmp,w
  1177  05CD  07F0               	addwf	strncmp@s2,f
  1178  05CE                     l699:
  1179  05CE  3001               	movlw	1
  1180  05CF  02F1               	subwf	strncmp@len,f
  1181  05D0  3000               	movlw	0
  1182  05D1  1C03               	skipc
  1183  05D2  03F2               	decf	strncmp@len+1,f
  1184  05D3  02F2               	subwf	strncmp@len+1,f
  1185  05D4  0A71               	incf	strncmp@len,w
  1186  05D5  1D03               	skipz
  1187  05D6  2DDB               	goto	u651
  1188  05D7  0A72               	incf	strncmp@len+1,w
  1189  05D8  1D03               	btfss	3,2
  1190  05D9  2DDB               	goto	u651
  1191  05DA  2DDC               	goto	u650
  1192  05DB                     u651:
  1193  05DB  2D9B               	goto	l1221
  1194  05DC                     u650:
  1195  05DC                     l1231:
  1196  05DC  01F0               	clrf	?_strncmp
  1197  05DD  01F1               	clrf	?_strncmp+1
  1198  05DE                     l704:
  1199  05DE  0008               	return
  1200  05DF                     __end_of_strncmp:
  1201                           
  1202                           	psect	text2
  1203  047E                     __ptext2:	
  1204 ;; *************** function _keypad_init *****************
  1205 ;; Defined at:
  1206 ;;		line 38 in file "KEYPAD.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0
  1223 ;;      Totals:         1       0       0       0       0
  1224 ;;Total ram usage:        1 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233  047E                     _keypad_init:	
  1234                           ;psect for function _keypad_init
  1235                           
  1236  047E                     l1083:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  1239                           
  1240                           
  1241                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1242  047E  30F0               	movlw	240
  1243  047F  00F0               	movwf	??_keypad_init
  1244  0480  0870               	movf	??_keypad_init,w
  1245  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1246  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1247  0483  0586               	andwf	6,f	;volatile
  1248                           
  1249                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1250  0484  30F0               	movlw	240
  1251  0485  00F0               	movwf	??_keypad_init
  1252  0486  0870               	movf	??_keypad_init,w
  1253  0487  0486               	iorwf	6,f	;volatile
  1254  0488                     l1085:
  1255                           
  1256                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  1257  0488  1381               	bcf	1,7	;volatile
  1258  0489                     l11:
  1259  0489  0008               	return
  1260  048A                     __end_of_keypad_init:
  1261                           
  1262                           	psect	text3
  1263  05DF                     __ptext3:	
  1264 ;; *************** function _keypad_getkey *****************
  1265 ;; Defined at:
  1266 ;;		line 57 in file "KEYPAD.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1271 ;;  i               2   17[BANK0 ] int 
  1272 ;;  valor           1   16[BANK0 ] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      unsigned char 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0      19       0       0       0
  1284 ;;      Temps:          4       0       0       0       0
  1285 ;;      Totals:         4      19       0       0       0
  1286 ;;Total ram usage:       23 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295  05DF                     _keypad_getkey:	
  1296                           ;psect for function _keypad_getkey
  1297                           
  1298  05DF                     l1087:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1301                           
  1302                           
  1303                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  1304  05DF  3020               	movlw	keypad_getkey@letras& (0+255)
  1305  05E0  0084               	movwf	4
  1306  05E1  3036               	movlw	low keypad_getkey@F1296
  1307  05E2  00F0               	movwf	??_keypad_getkey
  1308  05E3  0804               	movf	4,w
  1309  05E4  00F1               	movwf	??_keypad_getkey+1
  1310  05E5  3010               	movlw	16
  1311  05E6  00F2               	movwf	??_keypad_getkey+2
  1312  05E7                     u400:
  1313  05E7  0870               	movf	??_keypad_getkey,w
  1314  05E8  0084               	movwf	4
  1315  05E9  1383               	bcf	3,7	;select IRP bank0
  1316  05EA  0800               	movf	0,w
  1317  05EB  00F3               	movwf	??_keypad_getkey+3
  1318  05EC  0AF0               	incf	??_keypad_getkey,f
  1319  05ED  0871               	movf	??_keypad_getkey+1,w
  1320  05EE  0084               	movwf	4
  1321  05EF  0873               	movf	??_keypad_getkey+3,w
  1322  05F0  0080               	movwf	0
  1323  05F1  0AF1               	incf	??_keypad_getkey+1,f
  1324  05F2  0BF2               	decfsz	??_keypad_getkey+2,f
  1325  05F3  2DE7               	goto	u400
  1326  05F4                     l1089:
  1327  05F4                     l1091:
  1328                           
  1329                           ;KEYPAD.c: 64: char valor=0;
  1330  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1331  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1332  05F6  01B0               	clrf	keypad_getkey@valor
  1333  05F7                     l1093:
  1334                           
  1335                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  1336  05F7  01B1               	clrf	keypad_getkey@i
  1337  05F8  01B2               	clrf	keypad_getkey@i+1
  1338  05F9                     l1099:
  1339                           
  1340                           ;KEYPAD.c: 68:    if(i==0){
  1341  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05FB  0831               	movf	keypad_getkey@i,w
  1344  05FC  0432               	iorwf	keypad_getkey@i+1,w
  1345  05FD  1D03               	btfss	3,2
  1346  05FE  2E00               	goto	u411
  1347  05FF  2E01               	goto	u410
  1348  0600                     u411:
  1349  0600  2E2E               	goto	l1119
  1350  0601                     u410:
  1351  0601                     l1101:
  1352                           
  1353                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1354  0601  30FE               	movlw	254
  1355  0602  0086               	movwf	6	;volatile
  1356                           
  1357                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1358  0603  3042               	movlw	66
  1359  0604  00F0               	movwf	??_keypad_getkey
  1360  0605                     u767:
  1361  0605  0BF0               	decfsz	??_keypad_getkey,f
  1362  0606  2E05               	goto	u767
  1363  0607  0000               	nop
  1364                           
  1365                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1366  0608  2E0D               	goto	l1105
  1367  0609                     l1103:
  1368  0609  0820               	movf	keypad_getkey@letras,w
  1369  060A  00F0               	movwf	??_keypad_getkey
  1370  060B  0870               	movf	??_keypad_getkey,w
  1371  060C  00B0               	movwf	keypad_getkey@valor
  1372  060D                     l1105:
  1373  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1374  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1375  060F  1E06               	btfss	6,4	;volatile
  1376  0610  2E12               	goto	u421
  1377  0611  2E13               	goto	u420
  1378  0612                     u421:
  1379  0612  2E09               	goto	l1103
  1380  0613                     u420:
  1381  0613  2E18               	goto	l1109
  1382  0614                     l1107:
  1383  0614  0821               	movf	keypad_getkey@letras+1,w
  1384  0615  00F0               	movwf	??_keypad_getkey
  1385  0616  0870               	movf	??_keypad_getkey,w
  1386  0617  00B0               	movwf	keypad_getkey@valor
  1387  0618                     l1109:
  1388  0618  1E86               	btfss	6,5	;volatile
  1389  0619  2E1B               	goto	u431
  1390  061A  2E1C               	goto	u430
  1391  061B                     u431:
  1392  061B  2E14               	goto	l1107
  1393  061C                     u430:
  1394  061C  2E21               	goto	l1113
  1395  061D                     l1111:
  1396  061D  0822               	movf	keypad_getkey@letras+2,w
  1397  061E  00F0               	movwf	??_keypad_getkey
  1398  061F  0870               	movf	??_keypad_getkey,w
  1399  0620  00B0               	movwf	keypad_getkey@valor
  1400  0621                     l1113:
  1401  0621  1F06               	btfss	6,6	;volatile
  1402  0622  2E24               	goto	u441
  1403  0623  2E25               	goto	u440
  1404  0624                     u441:
  1405  0624  2E1D               	goto	l1111
  1406  0625                     u440:
  1407  0625  2E2A               	goto	l1117
  1408  0626                     l1115:
  1409  0626  0823               	movf	keypad_getkey@letras+3,w
  1410  0627  00F0               	movwf	??_keypad_getkey
  1411  0628  0870               	movf	??_keypad_getkey,w
  1412  0629  00B0               	movwf	keypad_getkey@valor
  1413  062A                     l1117:
  1414  062A  1F86               	btfss	6,7	;volatile
  1415  062B  2E2D               	goto	u451
  1416  062C  2E2E               	goto	u450
  1417  062D                     u451:
  1418  062D  2E26               	goto	l1115
  1419  062E                     u450:
  1420  062E                     l1119:
  1421                           
  1422                           ;KEYPAD.c: 78:    if(i==1){
  1423  062E  0331               	decf	keypad_getkey@i,w
  1424  062F  0432               	iorwf	keypad_getkey@i+1,w
  1425  0630  1D03               	btfss	3,2
  1426  0631  2E33               	goto	u461
  1427  0632  2E34               	goto	u460
  1428  0633                     u461:
  1429  0633  2E61               	goto	l1139
  1430  0634                     u460:
  1431  0634                     l1121:
  1432                           
  1433                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1434  0634  30FD               	movlw	253
  1435  0635  0086               	movwf	6	;volatile
  1436                           
  1437                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1438  0636  3042               	movlw	66
  1439  0637  00F0               	movwf	??_keypad_getkey
  1440  0638                     u777:
  1441  0638  0BF0               	decfsz	??_keypad_getkey,f
  1442  0639  2E38               	goto	u777
  1443  063A  0000               	nop
  1444                           
  1445                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1446  063B  2E40               	goto	l1125
  1447  063C                     l1123:
  1448  063C  0824               	movf	keypad_getkey@letras+4,w
  1449  063D  00F0               	movwf	??_keypad_getkey
  1450  063E  0870               	movf	??_keypad_getkey,w
  1451  063F  00B0               	movwf	keypad_getkey@valor
  1452  0640                     l1125:
  1453  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0642  1E06               	btfss	6,4	;volatile
  1456  0643  2E45               	goto	u471
  1457  0644  2E46               	goto	u470
  1458  0645                     u471:
  1459  0645  2E3C               	goto	l1123
  1460  0646                     u470:
  1461  0646  2E4B               	goto	l1129
  1462  0647                     l1127:
  1463  0647  0825               	movf	keypad_getkey@letras+5,w
  1464  0648  00F0               	movwf	??_keypad_getkey
  1465  0649  0870               	movf	??_keypad_getkey,w
  1466  064A  00B0               	movwf	keypad_getkey@valor
  1467  064B                     l1129:
  1468  064B  1E86               	btfss	6,5	;volatile
  1469  064C  2E4E               	goto	u481
  1470  064D  2E4F               	goto	u480
  1471  064E                     u481:
  1472  064E  2E47               	goto	l1127
  1473  064F                     u480:
  1474  064F  2E54               	goto	l1133
  1475  0650                     l1131:
  1476  0650  0826               	movf	keypad_getkey@letras+6,w
  1477  0651  00F0               	movwf	??_keypad_getkey
  1478  0652  0870               	movf	??_keypad_getkey,w
  1479  0653  00B0               	movwf	keypad_getkey@valor
  1480  0654                     l1133:
  1481  0654  1F06               	btfss	6,6	;volatile
  1482  0655  2E57               	goto	u491
  1483  0656  2E58               	goto	u490
  1484  0657                     u491:
  1485  0657  2E50               	goto	l1131
  1486  0658                     u490:
  1487  0658  2E5D               	goto	l1137
  1488  0659                     l1135:
  1489  0659  0827               	movf	keypad_getkey@letras+7,w
  1490  065A  00F0               	movwf	??_keypad_getkey
  1491  065B  0870               	movf	??_keypad_getkey,w
  1492  065C  00B0               	movwf	keypad_getkey@valor
  1493  065D                     l1137:
  1494  065D  1F86               	btfss	6,7	;volatile
  1495  065E  2E60               	goto	u501
  1496  065F  2E61               	goto	u500
  1497  0660                     u501:
  1498  0660  2E59               	goto	l1135
  1499  0661                     u500:
  1500  0661                     l1139:
  1501                           
  1502                           ;KEYPAD.c: 87:    if(i==2){
  1503  0661  3002               	movlw	2
  1504  0662  0631               	xorwf	keypad_getkey@i,w
  1505  0663  0432               	iorwf	keypad_getkey@i+1,w
  1506  0664  1D03               	btfss	3,2
  1507  0665  2E67               	goto	u511
  1508  0666  2E68               	goto	u510
  1509  0667                     u511:
  1510  0667  2E95               	goto	l1159
  1511  0668                     u510:
  1512  0668                     l1141:
  1513                           
  1514                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1515  0668  30FB               	movlw	251
  1516  0669  0086               	movwf	6	;volatile
  1517                           
  1518                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1519  066A  3042               	movlw	66
  1520  066B  00F0               	movwf	??_keypad_getkey
  1521  066C                     u787:
  1522  066C  0BF0               	decfsz	??_keypad_getkey,f
  1523  066D  2E6C               	goto	u787
  1524  066E  0000               	nop
  1525                           
  1526                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1527  066F  2E74               	goto	l1145
  1528  0670                     l1143:
  1529  0670  0828               	movf	keypad_getkey@letras+8,w
  1530  0671  00F0               	movwf	??_keypad_getkey
  1531  0672  0870               	movf	??_keypad_getkey,w
  1532  0673  00B0               	movwf	keypad_getkey@valor
  1533  0674                     l1145:
  1534  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0676  1E06               	btfss	6,4	;volatile
  1537  0677  2E79               	goto	u521
  1538  0678  2E7A               	goto	u520
  1539  0679                     u521:
  1540  0679  2E70               	goto	l1143
  1541  067A                     u520:
  1542  067A  2E7F               	goto	l1149
  1543  067B                     l1147:
  1544  067B  0829               	movf	keypad_getkey@letras+9,w
  1545  067C  00F0               	movwf	??_keypad_getkey
  1546  067D  0870               	movf	??_keypad_getkey,w
  1547  067E  00B0               	movwf	keypad_getkey@valor
  1548  067F                     l1149:
  1549  067F  1E86               	btfss	6,5	;volatile
  1550  0680  2E82               	goto	u531
  1551  0681  2E83               	goto	u530
  1552  0682                     u531:
  1553  0682  2E7B               	goto	l1147
  1554  0683                     u530:
  1555  0683  2E88               	goto	l1153
  1556  0684                     l1151:
  1557  0684  082A               	movf	keypad_getkey@letras+10,w
  1558  0685  00F0               	movwf	??_keypad_getkey
  1559  0686  0870               	movf	??_keypad_getkey,w
  1560  0687  00B0               	movwf	keypad_getkey@valor
  1561  0688                     l1153:
  1562  0688  1F06               	btfss	6,6	;volatile
  1563  0689  2E8B               	goto	u541
  1564  068A  2E8C               	goto	u540
  1565  068B                     u541:
  1566  068B  2E84               	goto	l1151
  1567  068C                     u540:
  1568  068C  2E91               	goto	l1157
  1569  068D                     l1155:
  1570  068D  082B               	movf	keypad_getkey@letras+11,w
  1571  068E  00F0               	movwf	??_keypad_getkey
  1572  068F  0870               	movf	??_keypad_getkey,w
  1573  0690  00B0               	movwf	keypad_getkey@valor
  1574  0691                     l1157:
  1575  0691  1F86               	btfss	6,7	;volatile
  1576  0692  2E94               	goto	u551
  1577  0693  2E95               	goto	u550
  1578  0694                     u551:
  1579  0694  2E8D               	goto	l1155
  1580  0695                     u550:
  1581  0695                     l1159:
  1582                           
  1583                           ;KEYPAD.c: 96:    if(i==3){
  1584  0695  3003               	movlw	3
  1585  0696  0631               	xorwf	keypad_getkey@i,w
  1586  0697  0432               	iorwf	keypad_getkey@i+1,w
  1587  0698  1D03               	btfss	3,2
  1588  0699  2E9B               	goto	u561
  1589  069A  2E9C               	goto	u560
  1590  069B                     u561:
  1591  069B  2EC9               	goto	l1179
  1592  069C                     u560:
  1593  069C                     l1161:
  1594                           
  1595                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1596  069C  30F7               	movlw	247
  1597  069D  0086               	movwf	6	;volatile
  1598                           
  1599                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1600  069E  3042               	movlw	66
  1601  069F  00F0               	movwf	??_keypad_getkey
  1602  06A0                     u797:
  1603  06A0  0BF0               	decfsz	??_keypad_getkey,f
  1604  06A1  2EA0               	goto	u797
  1605  06A2  0000               	nop
  1606                           
  1607                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1608  06A3  2EA8               	goto	l1165
  1609  06A4                     l1163:
  1610  06A4  082C               	movf	keypad_getkey@letras+12,w
  1611  06A5  00F0               	movwf	??_keypad_getkey
  1612  06A6  0870               	movf	??_keypad_getkey,w
  1613  06A7  00B0               	movwf	keypad_getkey@valor
  1614  06A8                     l1165:
  1615  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1616  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1617  06AA  1E06               	btfss	6,4	;volatile
  1618  06AB  2EAD               	goto	u571
  1619  06AC  2EAE               	goto	u570
  1620  06AD                     u571:
  1621  06AD  2EA4               	goto	l1163
  1622  06AE                     u570:
  1623  06AE  2EB3               	goto	l1169
  1624  06AF                     l1167:
  1625  06AF  082D               	movf	keypad_getkey@letras+13,w
  1626  06B0  00F0               	movwf	??_keypad_getkey
  1627  06B1  0870               	movf	??_keypad_getkey,w
  1628  06B2  00B0               	movwf	keypad_getkey@valor
  1629  06B3                     l1169:
  1630  06B3  1E86               	btfss	6,5	;volatile
  1631  06B4  2EB6               	goto	u581
  1632  06B5  2EB7               	goto	u580
  1633  06B6                     u581:
  1634  06B6  2EAF               	goto	l1167
  1635  06B7                     u580:
  1636  06B7  2EBC               	goto	l1173
  1637  06B8                     l1171:
  1638  06B8  082E               	movf	keypad_getkey@letras+14,w
  1639  06B9  00F0               	movwf	??_keypad_getkey
  1640  06BA  0870               	movf	??_keypad_getkey,w
  1641  06BB  00B0               	movwf	keypad_getkey@valor
  1642  06BC                     l1173:
  1643  06BC  1F06               	btfss	6,6	;volatile
  1644  06BD  2EBF               	goto	u591
  1645  06BE  2EC0               	goto	u590
  1646  06BF                     u591:
  1647  06BF  2EB8               	goto	l1171
  1648  06C0                     u590:
  1649  06C0  2EC5               	goto	l1177
  1650  06C1                     l1175:
  1651  06C1  082F               	movf	keypad_getkey@letras+15,w
  1652  06C2  00F0               	movwf	??_keypad_getkey
  1653  06C3  0870               	movf	??_keypad_getkey,w
  1654  06C4  00B0               	movwf	keypad_getkey@valor
  1655  06C5                     l1177:
  1656  06C5  1F86               	btfss	6,7	;volatile
  1657  06C6  2EC8               	goto	u601
  1658  06C7  2EC9               	goto	u600
  1659  06C8                     u601:
  1660  06C8  2EC1               	goto	l1175
  1661  06C9                     u600:
  1662  06C9                     l1179:
  1663                           
  1664                           ;KEYPAD.c: 104:    }
  1665  06C9  3001               	movlw	1
  1666  06CA  07B1               	addwf	keypad_getkey@i,f
  1667  06CB  1803               	skipnc
  1668  06CC  0AB2               	incf	keypad_getkey@i+1,f
  1669  06CD  3000               	movlw	0
  1670  06CE  07B2               	addwf	keypad_getkey@i+1,f
  1671  06CF                     l1181:
  1672  06CF  0832               	movf	keypad_getkey@i+1,w
  1673  06D0  3A80               	xorlw	128
  1674  06D1  00FF               	movwf	btemp+1
  1675  06D2  3080               	movlw	128
  1676  06D3  027F               	subwf	btemp+1,w
  1677  06D4  1D03               	skipz
  1678  06D5  2ED8               	goto	u615
  1679  06D6  3004               	movlw	4
  1680  06D7  0231               	subwf	keypad_getkey@i,w
  1681  06D8                     u615:
  1682  06D8  1C03               	skipc
  1683  06D9  2EDB               	goto	u611
  1684  06DA  2EDC               	goto	u610
  1685  06DB                     u611:
  1686  06DB  2DF9               	goto	l1099
  1687  06DC                     u610:
  1688  06DC                     l1183:
  1689                           
  1690                           ;KEYPAD.c: 106:    return valor;
  1691  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1692  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1693  06DE  0830               	movf	keypad_getkey@valor,w
  1694  06DF                     l70:
  1695  06DF  0008               	return
  1696  06E0                     __end_of_keypad_getkey:
  1697                           
  1698                           	psect	text4
  1699  04DC                     __ptext4:	
  1700 ;; *************** function _LCD_String_xy *****************
  1701 ;; Defined at:
  1702 ;;		line 115 in file "LCD.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  row             1    wreg     unsigned char 
  1705 ;;  pos             1    5[COMMON] unsigned char 
  1706 ;;  msg             1    6[COMMON] PTR const unsigned char 
  1707 ;;		 -> STR_4(21), STR_3(17), STR_2(15), STR_1(12), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  row             1    8[COMMON] unsigned char 
  1710 ;;  location        1    9[COMMON] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         2       0       0       0       0
  1721 ;;      Locals:         2       0       0       0       0
  1722 ;;      Temps:          1       0       0       0       0
  1723 ;;      Totals:         5       0       0       0       0
  1724 ;;Total ram usage:        5 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 2
  1727 ;; This function calls:
  1728 ;;		_LCD_Command
  1729 ;;		_LCD_String
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735  04DC                     _LCD_String_xy:	
  1736                           ;psect for function _LCD_String_xy
  1737                           
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1741                           ;LCD_String_xy@row stored from wreg
  1742  04DC  00F8               	movwf	LCD_String_xy@row
  1743  04DD                     l1201:
  1744  04DD                     l1203:
  1745                           
  1746                           ;LCD.c: 118:     if(row<=1)
  1747  04DD  3002               	movlw	2
  1748  04DE  0278               	subwf	LCD_String_xy@row,w
  1749  04DF  1803               	skipnc
  1750  04E0  2CE2               	goto	u621
  1751  04E1  2CE3               	goto	u620
  1752  04E2                     u621:
  1753  04E2  2CF0               	goto	l1209
  1754  04E3                     u620:
  1755  04E3                     l1205:
  1756                           
  1757                           ;LCD.c: 119:     {;LCD.c: 120:         location=(0x80) | ((pos) & 0x0f);
  1758  04E3  0875               	movf	LCD_String_xy@pos,w
  1759  04E4  390F               	andlw	15
  1760  04E5  3880               	iorlw	128
  1761  04E6  00F7               	movwf	??_LCD_String_xy
  1762  04E7  0877               	movf	??_LCD_String_xy,w
  1763  04E8  00F9               	movwf	LCD_String_xy@location
  1764  04E9                     l1207:
  1765                           
  1766                           ;LCD.c: 121:         LCD_Command(location);
  1767  04E9  0879               	movf	LCD_String_xy@location,w
  1768  04EA  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  1769                           
  1770                           ;LCD.c: 122:     }
  1771  04EF  2CFC               	goto	l1213
  1772  04F0                     l1209:
  1773                           
  1774                           ;LCD.c: 124:     {;LCD.c: 125:         location=(0xC0) | ((pos) & 0x0f);
  1775  04F0  0875               	movf	LCD_String_xy@pos,w
  1776  04F1  390F               	andlw	15
  1777  04F2  38C0               	iorlw	192
  1778  04F3  00F7               	movwf	??_LCD_String_xy
  1779  04F4  0877               	movf	??_LCD_String_xy,w
  1780  04F5  00F9               	movwf	LCD_String_xy@location
  1781  04F6                     l1211:
  1782                           
  1783                           ;LCD.c: 126:         LCD_Command(location);
  1784  04F6  0879               	movf	LCD_String_xy@location,w
  1785  04F7  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  1786  04FC                     l1213:
  1787                           
  1788                           ;LCD.c: 130:     LCD_String(msg);
  1789  04FC  0876               	movf	LCD_String_xy@msg,w
  1790  04FD  120A  118A  24BD  120A  118A  	fcall	_LCD_String
  1791  0502                     l102:
  1792  0502  0008               	return
  1793  0503                     __end_of_LCD_String_xy:
  1794                           
  1795                           	psect	text5
  1796  04BD                     __ptext5:	
  1797 ;; *************** function _LCD_String *****************
  1798 ;; Defined at:
  1799 ;;		line 105 in file "LCD.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  msg             1    wreg     PTR const unsigned char 
  1802 ;;		 -> STR_4(21), STR_3(17), STR_2(15), STR_1(12), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  msg             1    4[COMMON] PTR const unsigned char 
  1805 ;;		 -> STR_4(21), STR_3(17), STR_2(15), STR_1(12), 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         1       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		_LCD_Char
  1824 ;; This function is called by:
  1825 ;;		_LCD_String_xy
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829  04BD                     _LCD_String:	
  1830                           ;psect for function _LCD_String
  1831                           
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1835                           ;LCD_String@msg stored from wreg
  1836  04BD  00F4               	movwf	LCD_String@msg
  1837  04BE                     l1075:
  1838                           
  1839                           ;LCD.c: 105: void LCD_String(const char *msg);LCD.c: 106: {;LCD.c: 107:  while((*msg)!=0
      +                          )
  1840  04BE  2CCF               	goto	l1081
  1841  04BF                     l1077:
  1842                           
  1843                           ;LCD.c: 108:  {;LCD.c: 109:    LCD_Char(*msg);
  1844  04BF  0874               	movf	LCD_String@msg,w
  1845  04C0  0084               	movwf	4
  1846  04C1  120A  118A  2003  120A  118A  	fcall	stringdir
  1847  04C6  120A  118A  2563  120A  118A  	fcall	_LCD_Char
  1848  04CB                     l1079:
  1849                           
  1850                           ;LCD.c: 110:    msg++;
  1851  04CB  3001               	movlw	1
  1852  04CC  00F3               	movwf	??_LCD_String
  1853  04CD  0873               	movf	??_LCD_String,w
  1854  04CE  07F4               	addwf	LCD_String@msg,f
  1855  04CF                     l1081:
  1856                           
  1857                           ;LCD.c: 107:  while((*msg)!=0)
  1858  04CF  0874               	movf	LCD_String@msg,w
  1859  04D0  0084               	movwf	4
  1860  04D1  120A  118A  2003  120A  118A  	fcall	stringdir
  1861  04D6  3A00               	xorlw	0
  1862  04D7  1D03               	skipz
  1863  04D8  2CDA               	goto	u391
  1864  04D9  2CDB               	goto	u390
  1865  04DA                     u391:
  1866  04DA  2CBF               	goto	l1077
  1867  04DB                     u390:
  1868  04DB                     l97:
  1869  04DB  0008               	return
  1870  04DC                     __end_of_LCD_String:
  1871                           
  1872                           	psect	text6
  1873  0563                     __ptext6:	
  1874 ;; *************** function _LCD_Char *****************
  1875 ;; Defined at:
  1876 ;;		line 90 in file "LCD.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  dat             1    wreg     unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  dat             1    2[COMMON] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         1       0       0       0       0
  1892 ;;      Temps:          2       0       0       0       0
  1893 ;;      Totals:         3       0       0       0       0
  1894 ;;Total ram usage:        3 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_LCD_String
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904  0563                     _LCD_Char:	
  1905                           ;psect for function _LCD_Char
  1906                           
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1910                           ;LCD_Char@dat stored from wreg
  1911  0563  00F2               	movwf	LCD_Char@dat
  1912  0564                     l1035:
  1913                           
  1914                           ;LCD.c: 90: void LCD_Char(unsigned char dat);LCD.c: 91: {;LCD.c: 92:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  1915  0564  30F0               	movlw	240
  1916  0565  0572               	andwf	LCD_Char@dat,w
  1917  0566  00F0               	movwf	??_LCD_Char
  1918  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0569  0808               	movf	8,w	;volatile
  1921  056A  390F               	andlw	15
  1922  056B  0470               	iorwf	??_LCD_Char,w
  1923  056C  0088               	movwf	8	;volatile
  1924  056D                     l1037:
  1925                           
  1926                           ;LCD.c: 93:  PORTDbits.RD0 = 1;
  1927  056D  1408               	bsf	8,0	;volatile
  1928  056E                     l1039:
  1929                           
  1930                           ;LCD.c: 94:  PORTDbits.RD1 = 1;
  1931  056E  1488               	bsf	8,1	;volatile
  1932  056F                     l1041:
  1933                           
  1934                           ;LCD.c: 95:  __nop();
  1935  056F  0000               	nop
  1936  0570                     l1043:
  1937                           
  1938                           ;LCD.c: 96:  PORTDbits.RD1 = 0;
  1939  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0572  1088               	bcf	8,1	;volatile
  1942  0573                     l1045:
  1943                           
  1944                           ;LCD.c: 97:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1945  0573  3003               	movlw	3
  1946  0574  00F1               	movwf	??_LCD_Char+1
  1947  0575  3097               	movlw	151
  1948  0576  00F0               	movwf	??_LCD_Char
  1949  0577                     u807:
  1950  0577  0BF0               	decfsz	??_LCD_Char,f
  1951  0578  2D77               	goto	u807
  1952  0579  0BF1               	decfsz	??_LCD_Char+1,f
  1953  057A  2D77               	goto	u807
  1954  057B  2D7C               	nop2
  1955  057C                     l1047:
  1956                           
  1957                           ;LCD.c: 98:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  1958  057C  0872               	movf	LCD_Char@dat,w
  1959  057D  00F0               	movwf	??_LCD_Char
  1960  057E  3004               	movlw	4
  1961  057F                     u375:
  1962  057F  1003               	clrc
  1963  0580  0DF0               	rlf	??_LCD_Char,f
  1964  0581  3EFF               	addlw	-1
  1965  0582  1D03               	skipz
  1966  0583  2D7F               	goto	u375
  1967  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0586  0808               	movf	8,w	;volatile
  1970  0587  390F               	andlw	15
  1971  0588  0470               	iorwf	??_LCD_Char,w
  1972  0589  0088               	movwf	8	;volatile
  1973  058A                     l1049:
  1974                           
  1975                           ;LCD.c: 99:  PORTDbits.RD1 = 1;
  1976  058A  1488               	bsf	8,1	;volatile
  1977  058B                     l1051:
  1978                           
  1979                           ;LCD.c: 100:  __nop();
  1980  058B  0000               	nop
  1981  058C                     l1053:
  1982                           
  1983                           ;LCD.c: 101:  PORTDbits.RD1 = 0;
  1984  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1985  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1986  058E  1088               	bcf	8,1	;volatile
  1987                           
  1988                           ;LCD.c: 102:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1989  058F  3008               	movlw	8
  1990  0590  00F1               	movwf	??_LCD_Char+1
  1991  0591  30C9               	movlw	201
  1992  0592  00F0               	movwf	??_LCD_Char
  1993  0593                     u817:
  1994  0593  0BF0               	decfsz	??_LCD_Char,f
  1995  0594  2D93               	goto	u817
  1996  0595  0BF1               	decfsz	??_LCD_Char+1,f
  1997  0596  2D93               	goto	u817
  1998  0597  2D98               	nop2
  1999  0598                     l91:
  2000  0598  0008               	return
  2001  0599                     __end_of_LCD_Char:
  2002                           
  2003                           	psect	text7
  2004  0503                     __ptext7:	
  2005 ;; *************** function _LCD_Init *****************
  2006 ;; Defined at:
  2007 ;;		line 37 in file "LCD.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          2       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 1
  2028 ;; This function calls:
  2029 ;;		_LCD_Command
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035  0503                     _LCD_Init:	
  2036                           ;psect for function _LCD_Init
  2037                           
  2038  0503                     l1187:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2041                           
  2042                           
  2043                           ;LCD.c: 39:     TRISD = 0;
  2044  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0504  1303               	bcf	3,6	;RP1=0, select bank1
  2046  0505  0188               	clrf	8	;volatile
  2047  0506                     l1189:
  2048                           
  2049                           ;LCD.c: 40:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2050  0506  3027               	movlw	39
  2051  0507  00F4               	movwf	??_LCD_Init+1
  2052  0508  30F5               	movlw	245
  2053  0509  00F3               	movwf	??_LCD_Init
  2054  050A                     u827:
  2055  050A  0BF3               	decfsz	??_LCD_Init,f
  2056  050B  2D0A               	goto	u827
  2057  050C  0BF4               	decfsz	??_LCD_Init+1,f
  2058  050D  2D0A               	goto	u827
  2059  050E                     l1191:
  2060                           
  2061                           ;LCD.c: 41:     LCD_Command(0x02);
  2062  050E  3002               	movlw	2
  2063  050F  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2064  0514                     l1193:
  2065                           
  2066                           ;LCD.c: 42:     LCD_Command(0x28);
  2067  0514  3028               	movlw	40
  2068  0515  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2069  051A                     l1195:
  2070                           
  2071                           ;LCD.c: 43:     LCD_Command(0x01);
  2072  051A  3001               	movlw	1
  2073  051B  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2074  0520                     l1197:
  2075                           
  2076                           ;LCD.c: 44:     LCD_Command(0x0c);
  2077  0520  300C               	movlw	12
  2078  0521  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2079  0526                     l1199:
  2080                           
  2081                           ;LCD.c: 45:     LCD_Command(0x06);
  2082  0526  3006               	movlw	6
  2083  0527  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2084  052C                     l85:
  2085  052C  0008               	return
  2086  052D                     __end_of_LCD_Init:
  2087                           
  2088                           	psect	text8
  2089  048A                     __ptext8:	
  2090 ;; *************** function _LCD_Clear *****************
  2091 ;; Defined at:
  2092 ;;		line 146 in file "LCD.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0
  2108 ;;      Temps:          2       0       0       0       0
  2109 ;;      Totals:         2       0       0       0       0
  2110 ;;Total ram usage:        2 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 1
  2113 ;; This function calls:
  2114 ;;		_LCD_Command
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120  048A                     _LCD_Clear:	
  2121                           ;psect for function _LCD_Clear
  2122                           
  2123  048A                     l1215:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2126                           
  2127                           
  2128                           ;LCD.c: 148:     LCD_Command(0x01);
  2129  048A  3001               	movlw	1
  2130  048B  120A  118A  252D  120A  118A  	fcall	_LCD_Command
  2131  0490                     l1217:
  2132                           
  2133                           ;LCD.c: 149:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2134  0490  3008               	movlw	8
  2135  0491  00F4               	movwf	??_LCD_Clear+1
  2136  0492  30C9               	movlw	201
  2137  0493  00F3               	movwf	??_LCD_Clear
  2138  0494                     u837:
  2139  0494  0BF3               	decfsz	??_LCD_Clear,f
  2140  0495  2C94               	goto	u837
  2141  0496  0BF4               	decfsz	??_LCD_Clear+1,f
  2142  0497  2C94               	goto	u837
  2143  0498  2C99               	nop2
  2144  0499                     l105:
  2145  0499  0008               	return
  2146  049A                     __end_of_LCD_Clear:
  2147                           
  2148                           	psect	text9
  2149  052D                     __ptext9:	
  2150 ;; *************** function _LCD_Command *****************
  2151 ;; Defined at:
  2152 ;;		line 61 in file "LCD.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  cmd             1    wreg     unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  cmd             1    2[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         1       0       0       0       0
  2168 ;;      Temps:          2       0       0       0       0
  2169 ;;      Totals:         3       0       0       0       0
  2170 ;;Total ram usage:        3 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_LCD_Init
  2176 ;;		_LCD_String_xy
  2177 ;;		_LCD_Clear
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182  052D                     _LCD_Command:	
  2183                           ;psect for function _LCD_Command
  2184                           
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2188                           ;LCD_Command@cmd stored from wreg
  2189  052D  00F2               	movwf	LCD_Command@cmd
  2190  052E                     l1055:
  2191                           
  2192                           ;LCD.c: 61: void LCD_Command(unsigned char cmd );LCD.c: 62: {;LCD.c: 63:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  2193  052E  30F0               	movlw	240
  2194  052F  0572               	andwf	LCD_Command@cmd,w
  2195  0530  00F0               	movwf	??_LCD_Command
  2196  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0533  0808               	movf	8,w	;volatile
  2199  0534  390F               	andlw	15
  2200  0535  0470               	iorwf	??_LCD_Command,w
  2201  0536  0088               	movwf	8	;volatile
  2202  0537                     l1057:
  2203                           
  2204                           ;LCD.c: 64:  PORTDbits.RD0 = 0;
  2205  0537  1008               	bcf	8,0	;volatile
  2206  0538                     l1059:
  2207                           
  2208                           ;LCD.c: 65:  PORTDbits.RD1 = 1;
  2209  0538  1488               	bsf	8,1	;volatile
  2210  0539                     l1061:
  2211                           
  2212                           ;LCD.c: 66:  __nop();
  2213  0539  0000               	nop
  2214  053A                     l1063:
  2215                           
  2216                           ;LCD.c: 67:  PORTDbits.RD1 = 0;
  2217  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2218  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2219  053C  1088               	bcf	8,1	;volatile
  2220  053D                     l1065:
  2221                           
  2222                           ;LCD.c: 68:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2223  053D  3003               	movlw	3
  2224  053E  00F1               	movwf	??_LCD_Command+1
  2225  053F  3097               	movlw	151
  2226  0540  00F0               	movwf	??_LCD_Command
  2227  0541                     u847:
  2228  0541  0BF0               	decfsz	??_LCD_Command,f
  2229  0542  2D41               	goto	u847
  2230  0543  0BF1               	decfsz	??_LCD_Command+1,f
  2231  0544  2D41               	goto	u847
  2232  0545  2D46               	nop2
  2233  0546                     l1067:
  2234                           
  2235                           ;LCD.c: 69:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  2236  0546  0872               	movf	LCD_Command@cmd,w
  2237  0547  00F0               	movwf	??_LCD_Command
  2238  0548  3004               	movlw	4
  2239  0549                     u385:
  2240  0549  1003               	clrc
  2241  054A  0DF0               	rlf	??_LCD_Command,f
  2242  054B  3EFF               	addlw	-1
  2243  054C  1D03               	skipz
  2244  054D  2D49               	goto	u385
  2245  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2246  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0550  0808               	movf	8,w	;volatile
  2248  0551  390F               	andlw	15
  2249  0552  0470               	iorwf	??_LCD_Command,w
  2250  0553  0088               	movwf	8	;volatile
  2251  0554                     l1069:
  2252                           
  2253                           ;LCD.c: 70:  PORTDbits.RD1 = 1;
  2254  0554  1488               	bsf	8,1	;volatile
  2255  0555                     l1071:
  2256                           
  2257                           ;LCD.c: 71:  __nop();
  2258  0555  0000               	nop
  2259  0556                     l1073:
  2260                           
  2261                           ;LCD.c: 72:  PORTDbits.RD1 = 0;
  2262  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0558  1088               	bcf	8,1	;volatile
  2265                           
  2266                           ;LCD.c: 73:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2267  0559  3008               	movlw	8
  2268  055A  00F1               	movwf	??_LCD_Command+1
  2269  055B  30C9               	movlw	201
  2270  055C  00F0               	movwf	??_LCD_Command
  2271  055D                     u857:
  2272  055D  0BF0               	decfsz	??_LCD_Command,f
  2273  055E  2D5D               	goto	u857
  2274  055F  0BF1               	decfsz	??_LCD_Command+1,f
  2275  0560  2D5D               	goto	u857
  2276  0561  2D62               	nop2
  2277  0562                     l88:
  2278  0562  0008               	return
  2279  0563                     __end_of_LCD_Command:
  2280  007E                     btemp	set	126	;btemp
  2281  007E                     wtemp0	set	126
  2282                           
  2283                           	psect	idloc
  2284                           
  2285                           ;Config register IDLOC0 @ 0x2000
  2286                           ;	unspecified, using default values
  2287  2000                     	org	8192
  2288  2000  3FFF               	dw	16383
  2289                           
  2290                           ;Config register IDLOC1 @ 0x2001
  2291                           ;	unspecified, using default values
  2292  2001                     	org	8193
  2293  2001  3FFF               	dw	16383
  2294                           
  2295                           ;Config register IDLOC2 @ 0x2002
  2296                           ;	unspecified, using default values
  2297  2002                     	org	8194
  2298  2002  3FFF               	dw	16383
  2299                           
  2300                           ;Config register IDLOC3 @ 0x2003
  2301                           ;	unspecified, using default values
  2302  2003                     	org	8195
  2303  2003  3FFF               	dw	16383
  2304                           
  2305                           	psect	config
  2306                           
  2307                           ;Config register CONFIG1 @ 0x2007
  2308                           ;	Oscillator Selection bits
  2309                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2310                           ;	Watchdog Timer Enable bit
  2311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2312                           ;	Power-up Timer Enable bit
  2313                           ;	PWRTE = OFF, PWRT disabled
  2314                           ;	RE3/MCLR pin function select bit
  2315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2316                           ;	Code Protection bit
  2317                           ;	CP = OFF, Program memory code protection is disabled
  2318                           ;	Data Code Protection bit
  2319                           ;	CPD = OFF, Data memory code protection is disabled
  2320                           ;	Brown Out Reset Selection bits
  2321                           ;	BOREN = OFF, BOR disabled
  2322                           ;	Internal External Switchover bit
  2323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2324                           ;	Fail-Safe Clock Monitor Enabled bit
  2325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2326                           ;	Low Voltage Programming Enable bit
  2327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2328                           ;	In-Circuit Debugger Mode bit
  2329                           ;	DEBUG = 0x1, unprogrammed default
  2330  2007                     	org	8199
  2331  2007  20D5               	dw	8405
  2332                           
  2333                           ;Config register CONFIG2 @ 0x2008
  2334                           ;	Brown-out Reset Selection bit
  2335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2336                           ;	Flash Program Memory Self Write Enable bits
  2337                           ;	WRT = OFF, Write protection off
  2338  2008                     	org	8200
  2339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     65
    Constant    5
    Data        16
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     22      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2104
                                             10 COMMON     3     3      0
                                             19 BANK0      3     3      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                      _keypad_getkey
                        _keypad_init
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     3      2     909
                                              5 COMMON     5     3      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keypad_getkey
   _keypad_init
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Aug 04 15:35:05 2022

                      pc 0002             ?_LCD_Command 0070                       l11 0489  
                     l70 06DF                       l91 0598                       l85 052C  
                     l88 0562                       l97 04DB                       fsr 0004  
            ?_LCD_String 0070                      l102 0502                      l105 0499  
                    l153 0768                      l155 0771                      l156 0777  
                    l704 05DE                      l699 05CE                      u400 05E7  
                    u410 0601                      u411 0600                      u500 0661  
                    u420 0613                      u501 0660                      u421 0612  
                    u510 0668                      u430 061C                      u511 0667  
                    u431 061B                      u600 06C9                      u520 067A  
                    u440 0625                      u601 06C8                      u521 0679  
                    u441 0624                      u610 06DC                      u530 0683  
                    u450 062E                      u611 06DB                      u531 0682  
                    u451 062D                      u620 04E3                      u540 068C  
                    u460 0634                      u700 0775                      u621 04E2  
                    u541 068B                      u461 0633                      u701 0774  
                    u390 04DB                      u550 0695                      u470 0646  
                    u630 05A3                      u710 078A                      u375 057F  
                    u391 04DA                      u615 06D8                      u551 0694  
                    u471 0645                      u631 05A2                      u711 0789  
                    u560 069C                      u480 064F                      u640 05B3  
                    u720 07AC                      u385 0549                      u561 069B  
                    u481 064E                      u641 05B2                      u721 07AB  
                    u570 06AE                      u490 0658                      u650 05DC  
                    u571 06AD                      u491 0657                      u651 05DB  
                    u715 0786                      u580 06B7                      u660 0715  
                    u581 06B6                      u661 0714                      u590 06C0  
                    u670 073E                      u807 0577                      u591 06BF  
                    u671 073D                      u680 0752                      u817 0593  
                    u681 0751                      u737 072F                      u690 076E  
                    u827 050A                      u747 07C6                      u691 076D  
                    u837 0494                      u757 07D3                      u847 0541  
                    u767 0605                      u857 055D                      u777 0638  
                    u787 066C                      u797 06A0                      _idx 0048  
                    fsr0 0004                      indf 0000              LCD_Char@dat 0072  
                   l1101 0601                     l1111 061D                     l1103 0609  
                   l1041 056F                     l1201 04DD                     l1121 0634  
                   l1113 0621                     l1105 060D                     l1051 058B  
                   l1043 0570                     l1035 0564                     l1211 04F6  
                   l1203 04DD                     l1131 0650                     l1123 063C  
                   l1115 0626                     l1107 0614                     l1061 0539  
                   l1053 058C                     l1045 0573                     l1037 056D  
                   l1213 04FC                     l1205 04E3                     l1141 0668  
                   l1133 0654                     l1125 0640                     l1117 062A  
                   l1109 0618                     l1221 059B                     l1301 07CD  
                   l1071 0555                     l1063 053A                     l1055 052E  
                   l1215 048A                     l1047 057C                     l1039 056E  
                   l1207 04E9                     l1151 0684                     l1143 0670  
                   l1135 0659                     l1127 0647                     l1119 062E  
                   l1231 05DC                     l1223 05A3                     l1303 07DA  
                   l1073 0556                     l1065 053D                     l1057 0537  
                   l1217 0490                     l1049 058A                     l1081 04CF  
                   l1209 04F0                     l1161 069C                     l1153 0688  
                   l1145 0674                     l1137 065D                     l1129 064B  
                   l1225 05B3                     l1305 07DF                     l1241 06EA  
                   l1067 0546                     l1059 0538                     l1075 04BE  
                   l1171 06B8                     l1163 06A4                     l1155 068D  
                   l1147 067B                     l1139 0661                     l1091 05F4  
                   l1083 047E                     l1219 059A                     l1251 0706  
                   l1243 06EB                     l1235 06E0                     l1069 0554  
                   l1077 04BF                     l1181 06CF                     l1173 06BC  
                   l1165 06A8                     l1157 0691                     l1149 067F  
                   l1093 05F7                     l1085 0488                     l1229 05C6  
                   l1261 0729                     l1253 0710                     l1245 06F0  
                   l1237 06E4                     l1191 050E                     l1079 04CB  
                   l1183 06DC                     l1175 06C1                     l1167 06AF  
                   l1159 0695                     l1087 05DF                     l1271 0762  
                   l1263 0736                     l1255 0715                     l1247 06F5  
                   l1239 06E7                     l1193 0514                     l1177 06C5  
                   l1169 06B3                     l1089 05F4                     l1281 0775  
                   l1273 0766                     l1265 073E                     l1257 071B  
                   l1249 0700                     l1195 051A                     l1187 0503  
                   l1179 06C9                     l1099 05F9                     l1291 07A3  
                   l1283 077D                     l1267 0752                     l1259 0725  
                   l1197 0520                     l1189 0506                     l1293 07AC  
                   l1269 0757                     l1285 078B                     l1199 0526  
                   l1295 07B1                     l1287 0793                     l1279 076E  
                   l1297 07BC                     l1289 0798                     l1299 07C0  
                   STR_1 0043                     STR_2 0034                     STR_3 0023  
                   STR_4 000E                     _main 06E0                     btemp 007E  
                   start 0000            _LCD_String_xy 04DC         __end_of_LCD_Char 0599  
       __end_of_LCD_Init 052D                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088             ?_keypad_init 0070                    main@i 0034  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_strncmp 05DF           ?_LCD_String_xy 0075          __initialization 07E6  
           __end_of_main 07E6                   ??_main 007A        __end_of_LCD_Clear 049A  
    keypad_getkey@letras 0020                   _ANSELH 0189         LCD_String_xy@msg 0076  
       LCD_String_xy@pos 0075         LCD_String_xy@row 0078                   _OSCCON 008F  
       __end_of_password 000E                ??_strncmp 0073                ?_LCD_Char 0070  
__end_of__initialization 07FC                ?_LCD_Init 0070          ??_LCD_String_xy 0077  
         __pcstackCOMMON 0070             __pidataBANK0 049A             ??_LCD_String 0073  
         _OPTION_REGbits 0081               __pbssBANK0 0046               ??_LCD_Char 0070  
             ??_LCD_Init 0073       __end_of_LCD_String 04DC               __pmaintext 06E0  
          _keypad_getkey 05DF               __stringtab 0003            LCD_String@msg 0074  
                __ptext1 0599                  __ptext2 047E                  __ptext3 05DF  
                __ptext4 04DC                  __ptext5 04BD                  __ptext6 0563  
                __ptext7 0503                  __ptext8 048A                  __ptext9 052D  
         ?_keypad_getkey 0070                _LCD_Clear 048A                  main@key 0033  
                _strncmp 0599     end_of_initialization 07FC           LCD_Command@cmd 0072  
              _PORTDbits 0008               ?_LCD_Clear 0070            ??_LCD_Command 0070  
        ??_keypad_getkey 0070       keypad_getkey@F1296 0036      start_initialization 07E6  
     keypad_getkey@valor 0030    __end_of_LCD_String_xy 0503               init_fetch0 04AA  
            __pdataBANK0 0036      __end_of_LCD_Command 0563                ___latbits 0002  
          __pcstackBANK0 0020              ??_LCD_Clear 0073            ??_keypad_init 0070  
              __pstrings 0003    LCD_String_xy@location 0079                 ?_strncmp 0070  
               _LCD_Char 0563                 _LCD_Init 0503                _pass_user 0049  
    __end_of_keypad_init 048A              _LCD_Command 052D              __stringbase 0008  
            _counter_try 0046       __end_of__stringtab 0009              _keypad_init 047E  
             strncmp@len 0071                 _password 0009               _LCD_String 04BD  
  __end_of_keypad_getkey 06E0                 init_ram0 04AE                strncmp@s1 0075  
              strncmp@s2 0070                stringcode 0003                 stringdir 0003  
               stringtab 0003           keypad_getkey@i 0031  
